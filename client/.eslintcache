[{"/Users/oxygen/Desktop/programming/learning/online_store/client/src/index.js":"1","/Users/oxygen/Desktop/programming/learning/online_store/client/src/App.js":"2","/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/AppRouter.js":"3","/Users/oxygen/Desktop/programming/learning/online_store/client/src/routes.js":"4","/Users/oxygen/Desktop/programming/learning/online_store/client/src/utils/consts.js":"5","/Users/oxygen/Desktop/programming/learning/online_store/client/src/pages/Device.js":"6","/Users/oxygen/Desktop/programming/learning/online_store/client/src/pages/Admin.js":"7","/Users/oxygen/Desktop/programming/learning/online_store/client/src/pages/Auth.js":"8","/Users/oxygen/Desktop/programming/learning/online_store/client/src/pages/Shop.js":"9","/Users/oxygen/Desktop/programming/learning/online_store/client/src/pages/Basket.js":"10","/Users/oxygen/Desktop/programming/learning/online_store/client/src/store/UserStore.js":"11","/Users/oxygen/Desktop/programming/learning/online_store/client/src/store/DeviceStore.js":"12","/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/NavBar.js":"13","/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/TypeBar.js":"14","/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/BrandBar.js":"15","/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/DeviceList.js":"16","/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/DeviceItem.js":"17","/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/modals/CreateBrand.js":"18","/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/modals/CreateDevice.js":"19","/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/modals/CreateType.js":"20","/Users/oxygen/Desktop/programming/learning/online_store/client/src/http/userAPI.js":"21","/Users/oxygen/Desktop/programming/learning/online_store/client/src/http/index.js":"22"},{"size":437,"mtime":1653493117770,"results":"23","hashOfConfig":"24"},{"size":862,"mtime":1660912739324,"results":"25","hashOfConfig":"24"},{"size":779,"mtime":1661264869518,"results":"26","hashOfConfig":"24"},{"size":725,"mtime":1661265678010,"results":"27","hashOfConfig":"24"},{"size":234,"mtime":1653488432169,"results":"28","hashOfConfig":"24"},{"size":2185,"mtime":1663679752443,"results":"29","hashOfConfig":"24"},{"size":1379,"mtime":1663680184559,"results":"30","hashOfConfig":"24"},{"size":2604,"mtime":1663681395682,"results":"31","hashOfConfig":"24"},{"size":1519,"mtime":1661266723372,"results":"32","hashOfConfig":"24"},{"size":58,"mtime":1653488432168,"results":"33","hashOfConfig":"24"},{"size":366,"mtime":1653492548418,"results":"34","hashOfConfig":"24"},{"size":16412,"mtime":1661267363101,"results":"35","hashOfConfig":"24"},{"size":1673,"mtime":1653493107596,"results":"36","hashOfConfig":"24"},{"size":630,"mtime":1661266037791,"results":"37","hashOfConfig":"24"},{"size":668,"mtime":1661266615047,"results":"38","hashOfConfig":"24"},{"size":474,"mtime":1661267047249,"results":"39","hashOfConfig":"24"},{"size":1085,"mtime":1661267285617,"results":"40","hashOfConfig":"24"},{"size":1214,"mtime":1663680211564,"results":"41","hashOfConfig":"24"},{"size":5040,"mtime":1663680198356,"results":"42","hashOfConfig":"24"},{"size":1196,"mtime":1663680231727,"results":"43","hashOfConfig":"24"},{"size":520,"mtime":1663681765092,"results":"44","hashOfConfig":"24"},{"size":451,"mtime":1663681811657,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1csb9zb",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/oxygen/Desktop/programming/learning/online_store/client/src/index.js",[],["95","96"],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/App.js",["97","98","99"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport { observer } from \"mobx-react-lite\";\n// import {Context} from \"./index\";\n// import {check} from \"./http/userAPI\";\n// import {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n  // const {user} = useContext(Context)\n  // const [loading, setLoading] = useState(true)\n\n  // useEffect(() => {\n  //     check().then(data => {\n  //         user.setUser(true)\n  //         user.setIsAuth(true)\n  //     }).finally(() => setLoading(false))\n  // }, [])\n\n  // if (loading) {\n  //     return <Spinner animation={\"grow\"}/>\n  // }\n\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <AppRouter />\n    </BrowserRouter>\n  );\n});\n\nexport default App;\n","/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/AppRouter.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/routes.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/utils/consts.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/pages/Device.js",["100","101","102"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, Col, Container, Image, Row } from \"react-bootstrap\";\nimport bigStar from \"../assets/bigStar.png\";\nimport { useParams } from \"react-router-dom\";\n// import { fetchOneDevice } from \"../http/deviceAPI\";\n\nexport const Device = () => {\n  const [device, setDevice] = useState({ info: [] });\n  const { id } = useParams();\n\n  // useEffect(() => {\n  //   fetchOneDevice(id).then((data) => setDevice(data));\n  // }, []);\n\n  return (\n    <Container className=\"mt-3\">\n      <Row>\n        <Col md={4}>\n          <Image\n            width={300}\n            height={300}\n            src={process.env.REACT_APP_API_URL + device.img}\n          />\n        </Col>\n        <Col md={4}>\n          <Row className=\"d-flex flex-column align-items-center\">\n            <h2>{device.name}</h2>\n            <div\n              className=\"d-flex align-items-center justify-content-center\"\n              style={{\n                background: `url(${bigStar}) no-repeat center center`,\n                width: 240,\n                height: 240,\n                backgroundSize: \"cover\",\n                fontSize: 64,\n              }}\n            >\n              {device.rating}\n            </div>\n          </Row>\n        </Col>\n        <Col md={4}>\n          <Card\n            className=\"d-flex flex-column align-items-center justify-content-around\"\n            style={{\n              width: 300,\n              height: 300,\n              fontSize: 32,\n              border: \"5px solid lightgray\",\n            }}\n          >\n            <h3>От: {device.price} руб.</h3>\n            <Button variant={\"outline-dark\"}>Добавить в корзину</Button>\n          </Card>\n        </Col>\n      </Row>\n      <Row className=\"d-flex flex-column m-3\">\n        <h1>Характеристики</h1>\n        {device.info.map((info, index) => (\n          <Row\n            key={info.id}\n            style={{\n              background: index % 2 === 0 ? \"lightgray\" : \"transparent\",\n              padding: 10,\n            }}\n          >\n            {info.title}: {info.description}\n          </Row>\n        ))}\n      </Row>\n    </Container>\n  );\n};\n","/Users/oxygen/Desktop/programming/learning/online_store/client/src/pages/Admin.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/pages/Auth.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/pages/Shop.js",["103","104"],"import React, { useContext, useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\n// import { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceAPI\";\n// import Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n  const { device } = useContext(Context);\n\n  // useEffect(() => {\n  //   fetchTypes().then((data) => device.setTypes(data));\n  //   fetchBrands().then((data) => device.setBrands(data));\n  //   fetchDevices(null, null, 1, 2).then((data) => {\n  //     device.setDevices(data.rows);\n  //     device.setTotalCount(data.count);\n  //   });\n  // }, []);\n\n  // useEffect(() => {\n  //   fetchDevices(\n  //     device.selectedType.id,\n  //     device.selectedBrand.id,\n  //     device.page,\n  //     2\n  //   ).then((data) => {\n  //     device.setDevices(data.rows);\n  //     device.setTotalCount(data.count);\n  //   });\n  // }, [device.page, device.selectedType, device.selectedBrand]);\n\n  return (\n    <Container>\n      <Row className=\"mt-2\">\n        <Col md={3}>\n          <TypeBar />\n        </Col>\n        <Col md={9}>\n          <BrandBar />\n          <DeviceList />\n          {/* <Pages /> */}\n        </Col>\n      </Row>\n    </Container>\n  );\n});\n\nexport default Shop;\n","/Users/oxygen/Desktop/programming/learning/online_store/client/src/pages/Basket.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/store/UserStore.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/store/DeviceStore.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/NavBar.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/TypeBar.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/BrandBar.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/DeviceList.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/DeviceItem.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/modals/CreateBrand.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/modals/CreateDevice.js",["105"],"import React, { useContext, useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button, Dropdown, Form, Row, Col } from \"react-bootstrap\";\nimport { Context } from \"../../index\";\n// import {\n//   createDevice,\n//   fetchBrands,\n//   fetchDevices,\n//   fetchTypes,\n// } from \"../../http/deviceAPI\";\nimport { observer } from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({ show, onHide }) => {\n  const { device } = useContext(Context);\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [file, setFile] = useState(null);\n  const [info, setInfo] = useState([]);\n\n  // useEffect(() => {\n  //   fetchTypes().then((data) => device.setTypes(data));\n  //   fetchBrands().then((data) => device.setBrands(data));\n  // }, []);\n\n  const addInfo = () => {\n    setInfo([...info, { title: \"\", description: \"\", number: Date.now() }]);\n  };\n  const removeInfo = (number) => {\n    setInfo(info.filter((i) => i.number !== number));\n  };\n  const changeInfo = (key, value, number) => {\n    setInfo(\n      info.map((i) => (i.number === number ? { ...i, [key]: value } : i))\n    );\n  };\n\n  const selectFile = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const addDevice = () => {\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"price\", `${price}`);\n    formData.append(\"img\", file);\n    formData.append(\"brandId\", device.selectedBrand.id);\n    formData.append(\"typeId\", device.selectedType.id);\n    formData.append(\"info\", JSON.stringify(info));\n    // createDevice(formData).then((data) => onHide());\n  };\n\n  return (\n    <Modal show={show} onHide={onHide} centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Добавить устройство\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Dropdown className=\"mt-2 mb-2\">\n            <Dropdown.Toggle>\n              {device.selectedType.name || \"Выберите тип\"}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {device.types.map((type) => (\n                <Dropdown.Item\n                  onClick={() => device.setSelectedType(type)}\n                  key={type.id}\n                >\n                  {type.name}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n          <Dropdown className=\"mt-2 mb-2\">\n            <Dropdown.Toggle>\n              {device.selectedBrand.name || \"Выберите тип\"}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {device.brands.map((brand) => (\n                <Dropdown.Item\n                  onClick={() => device.setSelectedBrand(brand)}\n                  key={brand.id}\n                >\n                  {brand.name}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            className=\"mt-3\"\n            placeholder=\"Введите название устройства\"\n          />\n          <Form.Control\n            value={price}\n            onChange={(e) => setPrice(Number(e.target.value))}\n            className=\"mt-3\"\n            placeholder=\"Введите стоимость устройства\"\n            type=\"number\"\n          />\n          <Form.Control className=\"mt-3\" type=\"file\" onChange={selectFile} />\n          <hr />\n          <Button variant={\"outline-dark\"} onClick={addInfo}>\n            Добавить новое свойство\n          </Button>\n          {info.map((i) => (\n            <Row className=\"mt-4\" key={i.number}>\n              <Col md={4}>\n                <Form.Control\n                  value={i.title}\n                  onChange={(e) =>\n                    changeInfo(\"title\", e.target.value, i.number)\n                  }\n                  placeholder=\"Введите название свойства\"\n                />\n              </Col>\n              <Col md={4}>\n                <Form.Control\n                  value={i.description}\n                  onChange={(e) =>\n                    changeInfo(\"description\", e.target.value, i.number)\n                  }\n                  placeholder=\"Введите описание свойства\"\n                />\n              </Col>\n              <Col md={4}>\n                <Button\n                  onClick={() => removeInfo(i.number)}\n                  variant={\"outline-danger\"}\n                >\n                  Удалить\n                </Button>\n              </Col>\n            </Row>\n          ))}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-danger\" onClick={onHide}>\n          Закрыть\n        </Button>\n        <Button variant=\"outline-success\" onClick={addDevice}>\n          Добавить\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n});\n\nexport default CreateDevice;\n","/Users/oxygen/Desktop/programming/learning/online_store/client/src/components/modals/CreateType.js",[],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/http/userAPI.js",["106"],"/Users/oxygen/Desktop/programming/learning/online_store/client/src/http/index.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":27},{"ruleId":"111","severity":1,"message":"115","line":1,"column":29,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"116","line":1,"column":40,"nodeType":"113","messageId":"114","endLine":1,"endColumn":48},{"ruleId":"111","severity":1,"message":"115","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"117","line":8,"column":18,"nodeType":"113","messageId":"114","endLine":8,"endColumn":27},{"ruleId":"111","severity":1,"message":"118","line":9,"column":11,"nodeType":"113","messageId":"114","endLine":9,"endColumn":13},{"ruleId":"111","severity":1,"message":"115","line":1,"column":29,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"119","line":14,"column":11,"nodeType":"113","messageId":"114","endLine":14,"endColumn":17},{"ruleId":"111","severity":1,"message":"115","line":1,"column":29,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"120","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'setDevice' is assigned a value but never used.","'id' is assigned a value but never used.","'device' is assigned a value but never used.","'$authHost' is defined but never used.","no-global-assign","no-unsafe-negation"]